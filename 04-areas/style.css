/* 
  Grid Template Areas

  Nos permite definir áreas a partir del nombre de las mismas y se utiliza la propiedad grid-template-areas.

  Para definir el nombre de las áreas se escribe las filas entre comillas y las columnas separas por un espacio.

  grid-template-areas: 
    "header header header" › Fila 1
    "main main sidebar"; › Fila 2
      
  Con esto asignamos los nombres a cada área de la grilla. 

  Para colocar los elementos en el área que le corresponde usamos la propiedad 'grid-area' y como valor el nombre del área asignada.

    grid-area: header;

  Ojo: Las áreas se escriben sin comillas.

  Para agregar espacio entre las filas y columnas usamos la propiedad gap.

   gap: 24px;

  Si queremos usar espacio distino para filas y columnas usamos: column-gap y row-gap.

    column-gap: 16px;
    row-gap: 8px;

*/

*{
    padding: 0;
    margin: 0;
    box-sizing: border-box;

}

body {
    background-color: rgb(171, 80, 6);
    color: aliceblue;
    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
}

.container{
    background-color: rgb(240, 170, 66);
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: 1fr 2fr 1fr;
    grid-template-areas: 
    'header header header'
    'main main sidebar'
    'footer footer footer'
    ;
    gap: 24px;
    column-gap: 12px;
    padding: 14px;
    height: 100vh;
   
}

.item{
    border-radius: 24px;
    text-align: center;
    background-color: brown;
}

.header{
    grid-area: header;
    background-color: beige;
}

.main{
    grid-area: main;
    background-color: salmon;
}

.sidebar{grid-area: sidebar;
    background-color: white;
}

.footer{
    grid-area: footer;
    background-color: antiquewhite;
}